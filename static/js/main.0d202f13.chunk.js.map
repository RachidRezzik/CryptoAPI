{"version":3,"sources":["components/Currency.js","App.js","reportWebVitals.js","index.js"],"names":["Currency","props","volume_marketCap","volume","marketCap","forEach","data","length","toString","newData","toFixed","className","src","image","alt","name","symbol","price","toLocaleString","undefined","minimumFractionDigits","priceChange","App","useState","currency","setCurrency","search","setSearch","useEffect","axios","get","then","res","console","log","catch","error","filteredCurrency","filter","toLowerCase","includes","type","placeholder","onChange","e","target","value","window","scrollTo","top","style","border","maxWidth","width","marginRight","padding","marginLeft","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAEe,SAASA,EAASC,GAC7B,IAAMC,EAAmB,CAACD,EAAME,OAAQF,EAAMG,WAC1CD,EAAS,IACTC,EAAY,IAyBhB,OAvBAF,EAAiBG,SAAQ,SAAAC,GACrB,IAAIC,EAASD,EAAKE,WAAWD,OACzBE,EAAU,GACVF,EAAS,IAELE,GAAWH,EAAO,KAASI,QAD3BH,GAAS,EAC0B,EAEA,GAEvCE,EAAO,UAAMA,EAAQD,WAAd,OACAD,EAAS,GAAKA,EAAS,KAC9BE,GAAWH,EAAO,KAAYI,QAAQ,GACtCD,EAAO,UAAMA,EAAQD,WAAd,OAEPF,IAASL,EAAME,OACfA,EAASM,EAETL,EAAYK,KAOhB,qBAAKE,UAAU,qBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKC,IAAKX,EAAMY,MAAOC,IAAI,KAC3B,6BAAKb,EAAMc,OACX,4BAAId,EAAMe,YAEd,sBAAKL,UAAU,gBAAf,UACI,kCAAKV,EAAMgB,MAAMC,oBAAeC,EAAW,CAACC,sBAAuB,OACnE,kCAAKjB,EAAOe,oBACXjB,EAAMoB,YAAc,EACrB,oBAAGV,UAAU,aAAb,UACKV,EAAMoB,YAAYX,QAAQ,GAD/B,OAEOT,EAAMoB,YAAc,EAC3B,oBAAGV,UAAU,aAAb,UACKV,EAAMoB,YAAYX,QAAQ,GAD/B,OAGA,oCAGA,kCACMN,aCwBXkB,MAvEf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNC,EADM,KACIC,EADJ,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,KAIbC,qBAAU,WACNC,IAAMC,IAAI,4HACTC,MAAK,SAACC,GACLP,EAAYO,EAAI1B,MAChB2B,QAAQC,IAAIF,EAAI1B,SAEjB6B,OAAM,SAACC,GACNH,QAAQC,IAAIE,QAEf,IAEH,IAOMC,EAAmBb,EAASc,QAAO,SAAAd,GAAQ,OAC/CA,EAAST,KAAKwB,cAAcC,SAASd,EAAOa,kBAG9C,OACE,sBAAK5B,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,kDACA,+BACE,uBAAO8B,KAAK,OAAOC,YAAY,gBAAgBC,SAhBlC,SAACC,GACpBjB,EAAUiB,EAAEC,OAAOC,OACnBC,OAAOC,SAAS,CACdC,IAAK,SAeH,sBAAKtC,UAAU,eAAeuC,MAAO,CAACC,OAAQ,OAAQC,SAAU,UAAhE,UACQ,sBAAKzC,UAAU,WAAf,UACI,mBAAGuC,MAAO,CAACG,MAAM,UACjB,mBAAGH,MAAO,CAACI,YAAY,OAAQC,QAAS,YAAaC,WAAY,OAAjE,kBACA,0CAEJ,sBAAK7C,UAAU,gBAAf,UACI,sCACA,uCACA,6CAGA,oDAMd,qBAAKA,UAAU,oBAAf,SACG0B,EAAiBoB,KAAI,SAAAjC,GACpB,OACE,cAACxB,EAAD,CAEAe,KAAMS,EAAST,KACfF,MAAOW,EAASX,MAChBG,OAAQQ,EAASR,OACjBZ,UAAWoB,EAASkC,WACpBzC,MAAOO,EAASmC,cAChBtC,YAAaG,EAASoC,4BACtBzD,OAAQqB,EAASqC,cAPZrC,EAASsC,aChDXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0d202f13.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Currency(props) {\r\n    const volume_marketCap = [props.volume, props.marketCap]\r\n    let volume = \"2\"\r\n    let marketCap = \"4\"\r\n\r\n    volume_marketCap.forEach(data => {\r\n        let length = data.toString().length\r\n        let newData = \"\"\r\n        if (length < 10){\r\n            if (length <=5) {\r\n                newData = (data / 1000000).toFixed(2)\r\n            } else{\r\n                newData = (data / 1000000).toFixed(1)\r\n            }\r\n            newData = `${newData.toString()} M`\r\n        } else if (length > 9 && length < 13){\r\n            newData = (data / 1000000000).toFixed(1)\r\n            newData = `${newData.toString()} B`\r\n        } \r\n        if (data === props.volume){\r\n            volume = newData\r\n        } else {\r\n            marketCap = newData\r\n        }\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"currency_container\">\r\n            <div className=\"currency_row\">\r\n                <div className=\"currency\">\r\n                    <img src={props.image} alt=\"\" />\r\n                    <h1>{props.name}</h1>\r\n                    <p>{props.symbol}</p>\r\n                </div>\r\n                <div className=\"currency_data\">\r\n                    <p>${props.price.toLocaleString(undefined, {minimumFractionDigits: 2})}</p>\r\n                    <p>${volume.toLocaleString()}</p>\r\n                    {props.priceChange < 0 ? \r\n                    <p className=\"change_neg\">\r\n                        {props.priceChange.toFixed(2)}%\r\n                    </p> : props.priceChange > 0 ? \r\n                    <p className=\"change_pos\">\r\n                        {props.priceChange.toFixed(2)}%\r\n                    </p> : \r\n                    <p>\r\n                        N/A\r\n                    </p>}\r\n                    <p>\r\n                        ${marketCap}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport './App.css';\nimport Currency from './components/Currency';\n\nfunction App() {\n  const [currency, setCurrency] = useState([])\n  const [search, setSearch] = useState(\"\")\n\n  useEffect(() => {\n      axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n      .then((res) => {\n        setCurrency(res.data)\n        console.log(res.data)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }, [])\n\n  const handleChange = (e) => {\n    setSearch(e.target.value)\n    window.scrollTo({\n      top: 0\n    })\n  }\n\n  const filteredCurrency = currency.filter(currency => \n    currency.name.toLowerCase().includes(search.toLowerCase())\n  )\n\n  return (\n    <div className=\"App\">\n      <div className=\"search_div\">\n        <h1>Cryptocurrencies</h1>\n        <form>\n          <input type=\"text\" placeholder=\"Search Crypto\" onChange={handleChange} />\n        </form>\n        <div className=\"currency_row\" style={{border: \"none\", maxWidth: \"1050px\"}}>\n                <div className=\"currency\">\n                    <p style={{width:\"25px\"}}></p>\n                    <p style={{marginRight:\"auto\", padding: \"0px 2.5px\", marginLeft: \"5px\"}}>Name</p>\n                    <p>Symbol</p>\n                </div>\n                <div className=\"currency_data\">\n                    <p>Price</p>\n                    <p>Volume</p>\n                    <p>\n                        Daily Change\n                    </p> \n                    <p>\n                        Market Cap\n                    </p>\n                </div>\n            </div>\n      </div>\n      <div className=\"results_container\">\n        {filteredCurrency.map(currency => {\n          return (\n            <Currency \n            key={currency.id}  \n            name={currency.name}  \n            image={currency.image}  \n            symbol={currency.symbol}\n            marketCap={currency.market_cap}  \n            price={currency.current_price}  \n            priceChange={currency.price_change_percentage_24h}  \n            volume={currency.total_volume}  \n            />\n          )\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}